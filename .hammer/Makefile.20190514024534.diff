*** /Users/marcelo/.hammer/scaffold/blueprints/golang/project/quickstart/.hammer/Makefile.tpl
--- /Users/marcelo/.hammer/scaffold/blueprints/golang/project/quickstart/.hammer/Makefile.tpl
***************
*** 13,94 ****
  HAMMER_CMD := hammer
  RELEASE_TYPE ?= patch
  
! # ####
  .PHONY: default
! default: available-targets
! 
! available-targets: _available-targets
! dep-ensure-update: _dep-ensure-update
! dep-ensure: _dep-ensure
! dep-init: _dep-init
! doc-readme: _readme
! go-build: _go-build
! go-test: _go-test
! go-release: _release
! go-report: _go-report
! go-snapshot: _snapshot
! go-open-coverage: _open-coverage
! github-open-page: _open-page
! git-push: ;$(call git_push,Updating...)
! godoc-open: _godoc-open
! godoc-server-start: _godoc-server-start
! godoc-server-stop: _godoc-server-stop
! grip-open: _grip
! version-all: _all-versions
! version-current: _all-current
! version-next: _all-next
! 
! # --
! # Please do not call the targets below directly, instead create a call as the ones above.
! # --
  
  # Builds the application
! _go-build:
  	go build -o ./bin/$(PROJECT_NAME) -ldflags "-X main.VERSION=dev" -v ./cmd/$(PROJECT_NAME)/
  
  # Tests the application
! _go-test:
  	go test -v ./...
  
  # Starts Go Doc Server
! _godoc-server-start:  ;$(info $(M) - Starting Godoc server)
  	godoc -v
  
  # Stops Go Doc Server
! _godoc-server-stop:  ;$(info $(M) - Stopping Godoc server)
  	killall godoc
  
  # Open Go Doc Package page
! _godoc-open: ;$(info $(M) - Opening Godoc page)
  	open http://localhost:6060/pkg/github.com/$(GITHUB_USER)/$(PROJECT_NAME)
  
  # Shows all versions
! _all-versions: ;$(info $(M) - Showing $(PROJECT_NAME) all versions)
  	@git ls-remote --tags $(GIT_REMOTE)
  
  # Shows current version
! _current-version: _setup-versions
  	@echo $(CURRENT_VERSION)
  
  # Shows next  version
! _next-version: _setup-versions
  	@echo $(NEXT_VERSION)
  
  # Builds a snapshot
! _snapshot: ;$(info $(M) - Releasing $(PROJECT_NAME)-snapshot)
  	-@mkdir -p dist coverage
  	goreleaser  release --snapshot  --rm-dist --debug
  
  # Releases the application
! _release: _require-github-token _setup-versions _tag-push ;$(info $(M) - Releasing $(PROJECT_NAME)-$(NEXT_VERSION))
  	goreleaser release  --rm-dist
  
  # Builds a dry run of the app
! _dry-run:
  	goreleaser release  --skip-publish
  
  # Prepares for release
! _tag-push: ;$(call git_push,Releasing $(PROJECT_NAME)"-"$(NEXT_VERSION)) ;$(info $(M) Tagging $(PROJECT_NAME)-$(NEXT_VERSION))
  	git tag $(NEXT_VERSION)
  	git push --tags
  
--- 13,69 ----
  HAMMER_CMD := hammer
  RELEASE_TYPE ?= patch
  
! # 
  .PHONY: default
! default: hammer-targets
  
  # Builds the application
! go-build:
  	go build -o ./bin/$(PROJECT_NAME) -ldflags "-X main.VERSION=dev" -v ./cmd/$(PROJECT_NAME)/
  
  # Tests the application
! go-test:
  	go test -v ./...
  
  # Starts Go Doc Server
! godoc-server-start:  ;$(info $(M) - Starting Godoc server)
  	godoc -v
  
  # Stops Go Doc Server
! godoc-server-stop:  ;$(info $(M) - Stopping Godoc server)
  	killall godoc
  
  # Open Go Doc Package page
! godoc-open: ;$(info $(M) - Opening Godoc page)
  	open http://localhost:6060/pkg/github.com/$(GITHUB_USER)/$(PROJECT_NAME)
  
  # Shows all versions
! all-versions: ;$(info $(M) - Showing $(PROJECT_NAME) all versions)
  	@git ls-remote --tags $(GIT_REMOTE)
  
  # Shows current version
! current-version: _setup-versions
  	@echo $(CURRENT_VERSION)
  
  # Shows next  version
! next-version: _setup-versions
  	@echo $(NEXT_VERSION)
  
  # Builds a snapshot
! go-snapshot: ;$(info $(M) - Releasing $(PROJECT_NAME)-snapshot)
  	-@mkdir -p dist coverage
  	goreleaser  release --snapshot  --rm-dist --debug
  
  # Releases the application
! go-release: _require-github-token _setup-versions tag-push ;$(info $(M) - Releasing $(PROJECT_NAME)-$(NEXT_VERSION))
  	goreleaser release  --rm-dist
  
  # Builds a dry run of the app
! go-release-dry-run:
  	goreleaser release  --skip-publish
  
  # Prepares for release
! tag-push: ;$(call git_push,Releasing $(PROJECT_NAME)"-"$(NEXT_VERSION)) ;$(info $(M) Tagging $(PROJECT_NAME)-$(NEXT_VERSION))
  	git tag $(NEXT_VERSION)
  	git push --tags
  
***************
*** 99,116 ****
  
  # Dep Support - begin
  # Runs dep init
! _dep-init: ;$(info $(M) - Running "dep init")
  	dep init
  
  # Runs dep ensure
! _dep-ensure: ;$(info $(M) - Running "dep dep-ensure")
  	dep ensure
  
  # Runs dep ensure -update
! _dep-ensure-update: ;$(info $(M) - Running "dep dep-ensure")
  	dep ensure -update
  
! _dep-ensure-add: ;$(info $(M) - Running "dep dep-ensure -add $(PACKAGE)")
  ifndef PACKAGE
  	$(error PACKAGE is required)
  endif
--- 74,91 ----
  
  # Dep Support - begin
  # Runs dep init
! dep-init: ;$(info $(M) - Running "dep init")
  	dep init
  
  # Runs dep ensure
! dep-ensure: ;$(info $(M) - Running "dep dep-ensure")
  	dep ensure
  
  # Runs dep ensure -update
! dep-ensure-update: ;$(info $(M) - Running "dep dep-ensure")
  	dep ensure -update
  
! dep-ensure-add: ;$(info $(M) - Running "dep dep-ensure -add $(PACKAGE)")
  ifndef PACKAGE
  	$(error PACKAGE is required)
  endif
***************
*** 118,140 ****
  
  
  # Opens coverage page using default browser
! _open-coverage: ;$(info $(M) - Opening $(PROJECT_NAME)-$(NEXT_VERSION) Test Coverage Report)
  	open ./coverage/index.html
  
  # Opens github page using default browser
! _open-page: ;$(info $(M) - Opening $(PROJECT_NAME) Github Page)
  	open https://github.com/$(GITHUB_USER)/$(GIT_REPO_NAME).git
  
- # Generates README.md file, refer to README.yml
- _readme: ;$(info $(M) - Generates $(PROJECT_NAME) README.md Page)
- 	$(HAMMER_CMD) generate --resource-type readme .
- 
  # Opens Go Report Card
! _go-report: ;$(info $(M) - Opening $(PROJECT_NAME) Go Report Card)
  	open https://goreportcard.com/report/github.com/$(GITHUB_USER)/$(GIT_REPO_NAME)
  
  # Opens README page in local browser using Github renderer. Requires grip. pip install grip
! _grip:
  	grip -b
  
  # Exports AWS creds environment variables. Profiles are recommended but not mandatory
--- 93,111 ----
  
  
  # Opens coverage page using default browser
! open-coverage: ;$(info $(M) - Opening $(PROJECT_NAME)-$(NEXT_VERSION) Test Coverage Report)
  	open ./coverage/index.html
  
  # Opens github page using default browser
! open-page: ;$(info $(M) - Opening $(PROJECT_NAME) Github Page)
  	open https://github.com/$(GITHUB_USER)/$(GIT_REPO_NAME).git
  
  # Opens Go Report Card
! go-report: ;$(info $(M) - Opening $(PROJECT_NAME) Go Report Card)
  	open https://goreportcard.com/report/github.com/$(GITHUB_USER)/$(GIT_REPO_NAME)
  
  # Opens README page in local browser using Github renderer. Requires grip. pip install grip
! grip:
  	grip -b
  
  # Exports AWS creds environment variables. Profiles are recommended but not mandatory
***************
*** 163,168 ****
--- 134,140 ----
  # Hammer auto generated target
  hammer-banner:
  	-@hammer minion banner $(AWS_PROFILE)
+ 
  # Hammer auto generated target
  hammer-forge-make:
  	-@hammer forge addon --name Makefile.tpl .
